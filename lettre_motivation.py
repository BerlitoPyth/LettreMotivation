import streamlit as st
import time
from theme import toggle_theme
from quiz import display_quiz  
from presentation import display_presentation
from floating_chat import add_floating_chat_to_app
from PIL import Image
import random
from projet_gaming import display_project_concept

# Remplacer la fonction scroll_to_section par :
def scroll_to_section(title_id):
    js = f'''
    <script>
        function scrollToTitle() {{
            const title = document.getElementById("{title_id}");
            if (title) {{
                title.scrollIntoView({{ behavior: 'smooth', block: 'start' }});
            }}
        }}
        // Ex√©cuter apr√®s un court d√©lai pour s'assurer que le DOM est charg√©
        setTimeout(scrollToTitle, 100);
    </script>
    '''
    st.markdown(js, unsafe_allow_html=True)

def write_text_slowly(text):
    """Fonction pour l'effet machine √† √©crire"""
    placeholder = st.empty()
    for i in range(len(text) + 1):
        placeholder.markdown(f"### {text[:i]}‚ñå")
        time.sleep(0.03)
    placeholder.markdown(f"### {text}")

def display_data_animation():
    """Animation style Matrix en plein √©cran"""
    loading_container = st.empty()
    
    # Style CSS Matrix modifi√© pour le plein √©cran
    st.markdown("""
        <style>
        @keyframes matrix-rain {
            0% { transform: translateY(-100%); }
            100% { transform: translateY(100%); }
        }
        
        @keyframes glow {
            0% { text-shadow: 0 0 5px #0f0; }
            50% { text-shadow: 0 0 20px #0f0, 0 0 30px #0f0; }
            100% { text-shadow: 0 0 5px #0f0; }
        }
        
        .matrix-animation {
            font-family: 'Courier New', monospace;
            background-color: rgba(0, 0, 0, 0.95);
            color: #0f0;
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 9999;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }
        
        .binary-stream {
            font-size: 16px;
            letter-spacing: 4px;
            animation: glow 2s infinite;
            opacity: 0.8;
            position: relative;
            z-index: 2;
        }
        
        .message-text {
            font-size: 24px;
            margin: 20px 0;
            color: #fff;
            text-shadow: 0 0 10px #0f0;
            animation: glow 1.5s infinite;
            position: relative;
            z-index: 2;
        }
        
        .matrix-rain {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
            opacity: 0.3;
            pointer-events: none;
            z-index: 1;
        }
        
        .rain-column {
            animation: matrix-rain 2s linear infinite;
            animation-delay: var(--delay);
        }
        </style>
    """, unsafe_allow_html=True)

    # Animation Matrix avec colonnes de pluie
    matrix_chars = "01"
    rain_columns = 50  # Nombre de colonnes de pluie
    
    for i in range(50):
        binary = ''.join(random.choice(matrix_chars) for _ in range(40))
        rain_html = ''.join([
            f'<div class="rain-column" style="--delay: {random.random() * 2}s">{binary}</div>'
            for _ in range(rain_columns)
        ])
        
        loading_container.markdown(f"""
            <div class="matrix-animation">
                <div class="matrix-rain">{rain_html}</div>
                <div class="binary-stream">{binary[:int(i/50*len(binary))]}‚ñå</div>
                <div class="message-text">üìä Initialisation de la Matrice...</div>
            </div>
        """, unsafe_allow_html=True)
        time.sleep(0.02)
    
    time.sleep(0.5)
    
    # Message final avec effet Matrix
    loading_container.markdown(f"""
        <div class="matrix-animation">
            <div class="matrix-rain">{rain_html}</div>
            <div class="binary-stream">{binary}</div>
            <div class="message-text">üöÄ Bienvenue dans la Matrice. Merci pour le temps que vous m'accordez.</div>
        </div>
    """, unsafe_allow_html=True)
    time.sleep(1.5)
    loading_container.empty()

def main():
    st.set_page_config(
        page_title="Candidature BUT Science des Donn√©es",
        layout="wide"
    )

    # Ajouter l'animation au d√©but
    if 'animation_shown' not in st.session_state:
        display_data_animation()
        st.session_state.animation_shown = True
    
    # Afficher le toggle theme apr√®s l'animation ou directement si d√©j√† montr√©e
    toggle_theme()

    # Ajouter le chat apr√®s l'animation
    add_floating_chat_to_app()

    # Style personnalis√©
    st.markdown("""
        <style>
        .main {
            padding: 2rem;
        }
        .highlight {
            background-color: #f0f2f6;
            padding: 1rem;
            border-radius: 0.5rem;
        }
        .stButton > button {
            width: 100%;
        }
        .stImage {
            transition: transform 0.3s ease;
        }
        .stImage:hover {
            transform: scale(1.02);
            cursor: pointer;
        }
        .thumbnail-container {
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 5px;
        }
        .streamlit-title {
            scroll-margin-top: 20px;
        }
        #section-title {
            margin-top: 0;
            padding-top: 2rem;
        }
        .section-title {
            scroll-margin-top: 60px;
            opacity: 0;
            transition: opacity 0.5s;
        }
        .section-title.visible {
            opacity: 1;
        }
        .warning-box {
            background-color: #fee2e2;
            border: 1px solid #ef4444;
            border-radius: 8px;
            padding: 16px;
            margin: 20px 0;
            color: #991b1b;
        }
        .warning-title {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .custom-title {
            margin-top: 1rem;
            margin-bottom: 2rem;
            padding-top: 2rem;
            scroll-margin-top: 60px;
        }
        </style>
    """, unsafe_allow_html=True)

    # Sidebar
    with st.sidebar:
        st.title("üéØ Navigation")
        st.markdown("---")

        nav_container = st.container()
        with nav_container:
            st.markdown("""
                <div style="
                    background-color: rgba(255, 255, 255, 0.05);
                    border: 1px solid rgba(255, 255, 255, 0.1);
                    border-radius: 8px;
                    padding: 16px;
                    margin: 10px 0;
                ">
            """, unsafe_allow_html=True)
            
            # Menu de navigation
            selection = st.radio(
                "",
                ["üè† Accueil",
                 "‚ú® Quiz",
                 "üîß Projet",
                 "üë§ Pr√©sentation",
                 "üìà Parcours",
                 "‚úâÔ∏è Motivation"]
            )
            
            st.markdown("</div>", unsafe_allow_html=True)

        st.session_state.selection = selection
        # Lettre de recommandation
        st.markdown("### üìÑ Lettre de recommandation")
        try:
            if "lettre_agrandie" not in st.session_state:
                st.session_state.lettre_agrandie = False
            
            lettre = Image.open(".assets/lettre_recommandation.jpg")
            st.image(lettre, width=200, caption="Lettre de recommandation")
            if st.button("üìÑ Voir en plein √©cran"):
                st.session_state.lettre_agrandie = True
        except Exception as e:
            print(f"Erreur lors du chargement de la lettre: {str(e)}")
            st.error("Lettre de recommandation non disponible")

        st.markdown("---")
        st.markdown("### üë§ √Ä propos")
        st.info("""
        üéì DAEU B en cours
        ü§ø Ex-Plongeur Scaphandrier
        üíª Passionn√© de programmation
        üî¢ Amateur de math√©matiques
        """)

        st.markdown("---")
        st.success("""
        ### üìö Formations
        - DAEU B (en cours)
        - Python for Everybody
        - Python Data Structures
        - Using Python to Access Web Data
        - √âcole 42 - La Piscine
        - √âcole Nationale des Scaphandriers
        - Exp√©rience professionnelle
        """)

    # Affichage plein √©cran de la lettre si demand√©
    if st.session_state.get('lettre_agrandie', False):
        # Cr√©ation d'une overlay pour l'image en plein √©cran
        overlay_container = st.container()
        with overlay_container:
            col1, col2, col3 = st.columns([1, 6, 1])
            with col2:
                try:
                    lettre = Image.open(".assets/lettre_recommandation.jpg")
                    st.image(lettre, use_container_width=True)
                    if st.button("‚ùå Fermer", key="close_fullscreen"):
                        st.session_state.lettre_agrandie = False
                        st.rerun()
                except Exception as e:
                    st.error("Impossible d'afficher la lettre en plein √©cran")
                    print(f"Erreur: {e}")

    # Contenu principal bas√© sur la s√©lection
    if selection == "üè† Accueil":
        # Premi√®re rang√©e avec le titre et la photo
        col1, col2 = st.columns([3, 1])
        with col1:
            # V√©rifier si le titre a d√©j√† √©t√© √©crit
            if 'title_written' not in st.session_state:
                write_text_slowly("De la profondeur des oc√©ans √† la profondeur des donn√©es... üåä‚û°Ô∏èüìä")
                st.session_state.title_written = True
            else:
                st.markdown("### De la profondeur des oc√©ans √† la profondeur des donn√©es... üåä‚û°Ô∏èüìä")
        
        with col2:
            try:
                # Photo en haut √† droite
                image = Image.open(".assets/photo.jpg")
                image_rotated = image.rotate(-90, expand=True)
                st.image(image_rotated, width=200)
            except Exception as e:
                st.info("üì∏ Photo non disponible")
                print(f"Erreur: {e}")
        
        st.title("Candidature BUT Science des Donn√©es, BERLIAT Adrien")
        st.markdown("---")

        # Points cl√©s
        col1, col2 = st.columns(2)
        with col1:
            st.success("""
            ### ‚ú® Points Cl√©s
            - üìä Go√ªt pour les math√©matiques et l'informatique
            - ü§ù Exp√©rience du travail d'√©quipe
            - üí° Autodidacte
            - üöÄ Motivation √† toute √©preuve
            """)
        with col2:
            st.info("""
            ### üéì Formation Actuelle
            - üìö STI-2D
            - üíª Certifications Python
            - üîç DAEU B √† distance
            - üåü Excellents r√©sultats en sciences
            """)

        st.markdown("---")

        # Lettre de motivation
        st.header("üìù Ma Lettre de Motivation")
        st.markdown("""
        Madame, Monsieur,
        
        C'est avec enthousiasme que je vous pr√©sente ma candidature pour le BUT Science des Donn√©es.
        Une formation qui repr√©sente pour moi l'opportunit√© id√©ale d'allier ma passion pour les math√©matiques
        et l'informatique √† mon d√©sir d‚Äôacqu√©rir les comp√©tences n√©cessaires pour apprendre √† faire parler les donn√©es,
        par l√† j'entends en extraire du sens et des informations utiles pour la prise de d√©cision.
        
        D√®s mon plus jeune √¢ge, j‚Äôai d√©velopp√© une affinit√© naturelle pour les math√©matiques et la logique, et j‚Äôai toujours
        trouv√© la r√©solution de probl√®mes stimulante.
        
        Mon parcours, bien que singulier, refl√®te mon esprit d‚Äôinitiative, ma d√©termination et ma capacit√© d‚Äôadaptation.
        Apr√®s avoir interrompu ma terminale STI2D, j‚Äôai int√©gr√© la piscine de l‚Äô√âcole 42, o√π j‚Äôai d√©couvert mon go√ªt pour la
        programmation et renforc√© ma logique algorithmique. 
        
        Le sport de haut niveau a √©galement fa√ßonn√© ma pers√©v√©rance : j‚Äôai √©t√©, plus jeune, champion de France de pentathlon
        . Une exp√©rience qui m‚Äôa appris le d√©passement de soi et la rigueur. 
        
        Plus tard, mon exp√©rience en tant que plongeur scaphandrier m‚Äôa permis d‚Äô√©voluer dans un environnement exigeant o√π la pr√©cision,
        l‚Äôesprit d‚Äô√©quipe et la gestion du stress et la communication √©taient primordiaux.
        
        Gr√¢ce √† des √©changes avec des data analysts, j‚Äôai d√©couvert ce domaine qui m‚Äôest rapidement apparu comme une √©vidence
        tant il correspond √† mes affinit√©s. Depuis, je m‚Äôy int√©resse de pr√®s, suivant avec assiduit√© l‚Äôactualit√© du secteur ainsi 
        que des podcasts et conf√©rences de professionnels.
        
        Suite √† cette d√©couverte, et apr√®s m√ªres r√©flexions, j‚Äôai d√©cid√© de me r√©orienter vers la science des donn√©es et ai repris
        mes √©tudes avec un DAEU B en distanciel. Mon s√©rieux et mon engagement dans cette formation se refl√®tent √† travers mes r√©sultats 
        ainsi que la lettre de recommandation de mon professeur de physique. Cette reprise d‚Äô√©tude √† distance m'a appris √† m'organiser
        de mani√®re autonome et √† maintenir un haut niveau d'exigence dans mes √©tudes.
        
        Par ailleurs, en parall√®le de mes r√©visions, je me suis form√© √† Python en passant des formations certifiantes sur Coursera. 
        J‚Äôai aussi cr√©√© un concept innovant (voir section "Projet") dans le domaine du gaming. Cette exp√©rience a renforc√© ma conviction que l'analyse de donn√©es
        est un outil puissant et essentiel pour cr√©er des solutions pertinentes.
        
        Lors des journ√©es portes ouvertes de l‚ÄôIUT, j‚Äôai beaucoup appr√©ci√© l‚Äôambiance g√©n√©rale ainsi que les √©changes que j‚Äôai pu avoir avec
        les enseignants et les √©tudiants, notamment avec Monsieur Mellouk, qui a gentiment pris le temps de r√©pondre √† mes questions.
        Cette exp√©rience a d‚Äôautant plus renforc√© mon envie d‚Äôint√©grer votre √©tablissement, qui correspond pleinement √† mes attentes en termes 
        d‚Äôexigence et de qu√™te d‚Äôexcellence.
        
        Pour conclure, ma reconversion professionnelle est le fruit d'une r√©flexion approfondie et je suis convaincu que mon profil atypique 
        et mon d√©sir d'apprendre seront des atouts pr√©cieux pour r√©ussir et contribuer activement √† la dynamique de votre formation.
        
        Je vous prie d'agr√©er, Madame, Monsieur, l'expression de mes sinc√®res salutations.
        
        Adrien BERLIAT
        """)

        # Ajouter une bo√Æte d'avertissement s√©par√©e
        st.markdown("""
            <div style="
                background-color: #7f1d1d;
                border: 2px solid #ef4444;
                border-radius: 12px;
                padding: 25px;
                margin: 30px 0;
                color: #fecaca;
                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.4);
            ">
                <div style="
                    font-size: 1.3em;
                    font-weight: bold;
                    margin-bottom: 16px;
                    padding-bottom: 12px;
                    border-bottom: 1px solid #ef4444;
                    display: flex;
                    align-items: center;
                    gap: 10px;
                    color: #fee2e2;
                ">
                    ‚ö†Ô∏è Note importante
                </div>
                <div style="
                    background-color: rgba(0, 0, 0, 0.2);
                    padding: 20px;
                    border-radius: 8px;
                    border: 1px solid rgba(239, 68, 68, 0.3);
                ">
                    <p style="line-height: 1.7; margin-bottom: 16px;">
                    Je tiens √† pr√©ciser que je n'ai pas cr√©√© cette application pour mettre en avant mes comp√©tences en programmation, j'aurais √©t√©
                    bien incapable de la r√©aliser sans l'aide d'ia g√©n√©ratives. Pour autant je consid√®re ces derni√®res comme un outil dont il serait dommage de ne pas se servir
                    plut√¥t que comme une fa√ßon de "tricher".
                    </p>
                    <p style="line-height: 1.7; margin: 0;">
                    Le v√©ritable objectif √©tait de me d√©marquer en illustrant l'investissement que je mets dans mes projets
                    et mon d√©sir de rejoindre votre √©tablissement. J'ai toujours pens√© qu'il est pr√©f√©rable d'agir que de parler. J'esp√®re que vous aurez pris le
                    temps de me lire jusqu'ici et que cela vous aura convaincu car j'y ai consacr√© beaucoup de temps et d'efforts. Merci üòä
                    </p>
                </div>
            </div>
        """, unsafe_allow_html=True)

    elif selection == "üë§ Pr√©sentation":
        display_presentation()

        st.markdown("---")
        
    elif selection == "üîß Projet":
        display_project_concept()
        
    elif selection == "‚ú® Quiz":
        title_html = """
            <div style="
                margin-top: 20px;
                margin-bottom: 30px;
                scroll-margin-top: 60px;
            ">
                <h1 id="quiz-title">D√©couvrez si nous matchons ! ‚ù§Ô∏è</h1>
            </div>
        """
        st.markdown(title_html, unsafe_allow_html=True)
        scroll_to_section("quiz-title")
        display_quiz()
        
    elif selection == "üìà Parcours":
        st.markdown('<h1 id="parcours-title" class="custom-title">Mon Parcours</h1>', unsafe_allow_html=True)
        scroll_to_section("parcours-title")


    elif selection == "‚úâÔ∏è Motivation":
        st.markdown('<h1 id="motivation-title" class="custom-title">Ma Motivation</h1>', unsafe_allow_html=True)
        scroll_to_section("motivation-title")

    # Footer
    st.markdown("---")
    st.markdown("*Application interactive cr√©√© pour accompagner ma candidature au BUT Science des Donn√©es*")

if __name__ == "__main__":
    main()
